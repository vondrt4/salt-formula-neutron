{%- from "neutron/map.jinja" import switch with context %}
[DEFAULT]
verbose = True
debug = True
agent_down_time = 75
lock_path = $state_path/lock
notification_driver = neutron.openstack.common.notifier.rpc_notifier
auth_strategy = keystone

#RabbitMQ
rabbit_host = {{ switch.message_queue.host }}
rabbit_port = {{ switch.message_queue.port }}
rabbit_userid = {{ switch.message_queue.user }}
rabbit_password = {{ switch.message_queue.password }}
rabbit_virtual_host = {{ switch.message_queue.virtual_host }}

notify_nova_on_port_status_changes = True
notify_nova_on_port_data_changes = True

#Nova
nova_url = http://{{ pillar.nova.compute.identity.host }}:8774/v2
nova_admin_username ={{ pillar.nova.compute.identity.user }}
nova_admin_tenant_id = {{ pillar.nova.compute.identity.tenant_id }}
nova_admin_password ={{ pillar.nova.compute.identity.password }}
nova_admin_auth_url =http://{{ pillar.nova.compute.identity.host }}:{{ pillar.nova.compute.identity.port }}/v2.0

#Plugins
core_plugin = ml2
service_plugins = router

[quotas]

[agent]
report_interval = 5

[keystone_authtoken]
signing_dir = $state_path/keystone-signing
auth_uri=http://{{ switch.identity.host }}:5000
auth_host = {{ switch.identity.host }}
auth_port = {{ switch.identity.port }}
auth_protocol = http
admin_tenant_name = {{ switch.identity.tenant }}
admin_user = {{ switch.identity.user }}
admin_password = {{ switch.identity.password }}

[database]
connection = {{ switch.database.engine }}://{{ switch.database.user }}:{{ switch.database.password }}@{{ switch.database.host }}/{{ switch.database.name }}

[service_providers]
service_provider=VPN:openswan:neutron.services.vpn.service_drivers.ipsec.IPsecVPNDriver:default